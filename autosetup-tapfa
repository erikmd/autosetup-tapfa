#!/usr/bin/env bash
version="0.3.2"
#
# Copyright (c) 2019  Érik Martin-Dorel
#
# Licensed under BSD-3 <https://opensource.org/licenses/BSD-3-Clause>
#
# Report bugs to: https://github.com/erikmd/autosetup-tapfa/issues

die_hard() {
    printf "%b\n" "$*" >&2
    exit 1
}

warn() {
    printf "%b\n" "$*" >&2
}

check_windows() {
    [ "$(uname -s)" = "Linux" ] || die_hard "Erreur: ce script est conçu pour Linux uniquement."
}

installed() {
    local prog
    local name
    prog="$1"
    name="$2"
    if command -v "$prog"; then
        warn "=> $name détecté"
    else
        die_hard "Erreur : $name non installé"
    fi
}

check_emacs24() {
    local ver
    installed emacs "GNU Emacs"
    ver=$(emacs --version | head -n1 | sed -e 's/^[^0-9.]*\([0-9.]\+\)[^0-9.]*$/\1/')
    warn "emacs --version = $ver"
    if [ "$(head -n1 <(sort -V <<<$'24.3\n'"$ver"))" = "24.3" ]; then
        warn "=> emacs OK (version >= 24.3)"
    else
        die_hard "Erreur : emacs >= 24.3 nécessaire"
    fi
}

check_opam2() {
    local ver
    installed opam "opam"
    ver=$(opam --version)
    warn "opam --version = $ver"
    if [[ $ver =~ ^"2.0" ]]; then
         warn "=> opam OK (version 2.0.x)"
    else
        die_hard "Erreur : opam 2.0.x nécessaire"
    fi
}

question() {
    local prompt
cat <<EOF
Voulez-vous suivre la procédure d'installation la plus "standard"
(création d'un dossier ~/.opam personnel) ou bien la plus rapide
(utilisation d'OPAMROOT=/tmp/opam-tapfa, solution recommandée) ?
EOF
    select prompt in Standard Rapide; do
	case "$prompt" in
	    'Standard') return 0; break;;
	    'Rapide') return 1; break;;
	    *) echo 'Saisie incorrecte. Recommencez :'; continue;;
	esac
    done
    if [ -z "$prompt" ]; then
	echo 'Saisie interrompue.'
	exit 1
    fi
}

main () {
    local ini
    check_windows
    check_emacs24
    check_opam2
    if question; then
	if grep -q -e "opam_tapfa || true" ~/.bashrc; then
	    sed -i.old -e 's/opam_tapfa || true//' ~/.bashrc
	    diff -u0 -- ~/.bashrc.old ~/.bashrc
	    echo "*** Ligne 'opam_tapfa || true' supprimée de votre  ~/.bashrc"
	    echo "*** Veuillez relancer votre terminal pour prendre en compte"
	    echo "*** le nouveau ~/.bashrc, puis relancer autosetup-tapfa."
	    exit 0
	fi
	[ -z "$OPAMROOT" ] || { echo "Erreur: OPAMROOT défini. Relancer le terminal."; exit 1; }
	set -ex
	opam init --auto-setup --yes --compiler=ocaml-base-compiler.4.05.0
	eval $(opam env)
	# opam switch create 4.05.0 # déjà OK avec init
	# eval $(opam env)
	opam install -y merlin
	# opam install coq.8.8.2 # déjà OK en salle de TP
	cd
	ini="$HOME/.emacs"
	if [ -e "$ini" ]; then
            : sauvegarde de "$ini"
            mv "$ini" "$ini~"
	fi
	curl -OL https://github.com/erikmd/tapfa-init.el/raw/master/.emacs
	emacs &
	: configuration de Merlin OK
    else
	if grep -e "opam_tapfa()" ~/.bashrc; then
	    echo "# déjà ajouté dans ~/.bashrc"
	    echo "}"
	else
	    echo "# Ajout de opam_tapfa()"
	    cat >> ~/.bashrc <<EOF
opam_tapfa() {
    export OPAMROOT=/tmp/opam-tapfa
    if [ ! -d "\$OPAMROOT" ]; then
	ln -sv "\$(readlink -f "/opt/EMD/opam-tapfa")" "\$OPAMROOT"
    else
	echo "\$OPAMROOT => OK"
    fi
}
EOF
	fi
	if grep -e "opam_tapfa || true" ~/.bashrc; then
	    echo "# déjà ajouté dans ~/.bashrc"
	else
	    echo "# Ajout de opam_tapfa || true"
	    cat >> ~/.bashrc <<EOF
opam_tapfa || true
EOF
	    echo "*** Veuillez relancer votre terminal pour prendre en compte"
	    echo "*** le nouveau ~/.bashrc, puis relancer autosetup-tapfa."
            exit 0
	fi
	[ -n "$OPAMROOT" ] || { echo "Erreur: OPAMROOT non défini. Relancer le terminal."; exit 1; }

        cd
	ini="$HOME/.emacs"
	if [ -e "$ini" ]; then
            : sauvegarde de "$ini"
            mv "$ini" "$ini~"
	fi
	curl -OL https://github.com/erikmd/tapfa-init.el/raw/master/.emacs
	emacs &
	: configuration terminée
    fi
}

main "$@"
